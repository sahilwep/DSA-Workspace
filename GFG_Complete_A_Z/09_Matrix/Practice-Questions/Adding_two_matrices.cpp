/*

// Adding two matrices

// Observations: 
    * We are given two matrix, we need to perform addition & return the result in 2d array.

// Example:
    Input:
        n1 = 2, m1 = 3
        A[][] = {{1, 2, 3},
                {4, 5, 6}}

        n2 = 2, m2 = 3
        B[][] = {{1, 3, 3},
                {2, 3, 3}}

    Output: 2 5 6 6 8 9

    Explanation:
        The summation matrix of A and B is:
        res[][] = {{2, 5, 6},
                {6, 8, 9}}
        The output is generated by traversing each
        row sequentially.

// Intrusion:
    * We need to take care of edge case, i.e when size of both the matrix is not equal
    * Else everything is easy to handel.

*/

//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 


class Solution{
    public:
    vector<vector<int> > sumMatrix( const vector<vector<int> >& A, const vector<vector<int> >& B){
        // Edge Case: When size of both the matrix is not equal:
        vector<vector<int> > edge(1, vector<int> (1));
        edge[0][0] = -1;
        if(A.size() != B.size()){
            return edge;
        }
        if(A[0].size() != B[0].size()){
            return edge;
        }

        // Else if size of both the matrix are equal:
        int n = A.size();
        int m = A[0].size();

        // create a vector containing "n" vector, each of size "m"
        vector<vector<int> > res(n, vector<int> (m));
        
        // if both matrix is not equal size:

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                res[i][j] = A[i][j] + B[i][j];
            }
        }
    
        return res;
    }
};



int main(){
    int t;
    cin>>t;
    while(t--) {
        int row, col;
        cin>> row>> col;
        vector<vector<int> > A(row); 
        for(int i=0; i<row; i++){
            A[i].assign(col, 0);
            for( int j=0; j<col; j++)
            {
                cin>>A[i][j];
            }
        }
        cin>> row>> col;
        vector<vector<int> > B(row);
        for(int i=0; i<row; i++){
            B[i].assign(col, 0);
            for( int j=0; j<col; j++){
                cin>>B[i][j];
            }
        }

        Solution ob;
        vector<vector<int> > result = ob.sumMatrix(A,B);
        if(result.size() == 0)  cout<<"-1";
        else{
            for (int i = 0; i < result.size(); ++i){
                for (int j = 0; j < result[0].size(); ++j){
                    cout<<result[i][j]<<" ";
                }
            }
        }
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends